persistidents 0

newmenu editing

menuitem (_ [Mapmodels...])         [ showmenu Mapmodels ]
menuitem (_ [Lighting...])          [ showmenu Lighting ]
menuitem (_ [Entities...])          [ showmenu Entities ]
menuitem (_ [Pickups...])           [ showmenu Pickups ]
menuitem (_ [Test a skymap...])     [ showmenu skymaps ]
menuitem (_ [Ambient sounds...])    [ showmenu [Ambient sounds] ]
menuitem (_ [Arches and slopes...]) [ showmenu Arches ]
menuitem (_ [Map operations...])    [ showmenu [Map operations] ]
menuitem (_ [Bots...])              [ showmenu [Creating bot waypoints] ]
menuitem (_ [Settings...])          [ showmenu [Editing settings] ]
menuitem (_ Help?) [ echo (yellow) (_ [Please read the AssaultCube README which has a detailed guide on mapediting...]) ]

tempalias tmp_cradius 12

//Lighting menu.
newmenu Lighting

menuitem (_ [Add white lights ])   [ showmenu [White light] ]
menuitem (_ [Add coloured lights ]) [ showmenu [Coloured light] ]
menuitem [] -1
menuitemcheckbox (_ [Enable fullbright: ]) "$fullbright" [ fullbright $arg1 ]
menuitem [] -1
menuitem (_ [Random coloured light: ]) -1
menuitemtextinput (_ [Radius: ]) [ result $tmp_cradius ] [ if (&& (! (> $arg1 32)) (! (< $arg1 1))) [ tmp_cradius = $arg1 ] [ echo (red)Error: (yellow) $arg1 (white)is not a valid radius for a light entity. ] ]
menuitem (_ [Place random light...]) [ gencl $tmp_cradius ]
menuitem (_ [Update random light...]) gencl

wlight = 1; wlight1 = 1

newmenu [White light]

menuitemslider (_ [Light radius: ]) 1 32 "$wlight" 1 [] [ wlight = $arg1 ]
menuitemslider (_ [Brightness: ]) 1 255 "$wlight1" 5 [] [ wlight1 = $arg1 ]
menuitem [] -1
menuitem (concatword (c 2) [		    ] "[ OK ]" [		]) [ newent light $wlight $wlight1 ]

clight = 1; clight1 = 1; clight2 = 1; clight3 = 1

newmenu [Coloured light]

menuitemslider (_ [Light radius: ]) 1 32 "$clight" 1 []  [ clight = $arg1 ]
menuitem [] -1
menuitemslider (_ [Red light: ]) 1 255 "$clight1" 5 []   [ clight1 = $arg1 ]
menuitemslider (_ [Green light: ]) 1 255 "$clight2" 5 [] [ clight2 = $arg1 ]
menuitemslider (_ [Blue light: ]) 1 255 "$clight3" 5 []  [ clight3 = $arg1 ]
menuitem [] -1
menuitem (concatword (c 2) [		    ] "[ OK ]") [ newent light $clight $clight1 $clight2 $clight3 ]

//Entities menu
newmenu Entities

menuitem (_ [RVSF Spawn point])	[ newent playerstart 1 ]
menuitem (_ [CLA Spawn point])	[ newent playerstart 0 ]
menuitem (_ [FFA Spawn point])	[ newent playerstart 100 ]
menuitem [] -1
menuitem (_ [RVSF CTF Flag])	  [ newent ctf-flag 1 ]
menuitem (_ [CLA CTF Flag])		  [ newent ctf-flag 0 ]
menuitem [] -1
menuitem (_ [Ladder entity]) "saycommand /newent ladder " [ echo "Ensure that you have placed the ladder mapmodel first (found in the mapmodels menu)..." ]
menuitem (_ [Clip entity])   [ showmenu Clips ] [ echo Clips can be used to block off areas that players shouldn't be able to access... ]

_clip00 = clip; _clip00status = 0; _clip01 = 0; _clip02 = 1; _clip03 = 1; _clip04 = 1 // Give aliases an initial value.

newmenu Clips

menuitemslider (_ [Clip type: ]) 0 1 "$_clip00status" 1 [ Clip "Player Clip" ] [ _clip00 = (at [clip plclip] $arg1); _clip00status = $arg1 ]
menuitemslider (_ [Elevation from ground: ]) 0 50 "$_clip01" 1 [] [ _clip01 = $arg1 ]
menuitemslider (_ "Length of clip	(X): ") 0 50 "$_clip02" 1 []   [ _clip02 = $arg1 ]
menuitemslider (_ "Width of clip	(Y): ") 0 50 "$_clip03" 1 []     [ _clip03 = $arg1 ]
menuitemslider (_ "Height of clip	(Z): ") 0 50 "$_clip04" 1 []   [ _clip04 = $arg1 ]
menuitem [] -1
menuitem (concatword (c 2) [		     ] "[ OK ]") [ newent $_clip00 $_clip01 $_clip02 $_clip03 $_clip04 ]

//Pickups menu
newmenu Pickups

menuitem (_ Health)            [ newent health ]
menuitem (_ [Pistol Magazine]) [ newent pistol ]
menuitem (_ [Box of Ammo])     [ newent ammobox ]
menuitem (_ [Kevlar Vest])     [ newent armour ]
menuitem (_ Helmet)            [ newent helmet ]
menuitem (_ Akimbo)            [ newent akimbo ]
menuitem (_ Grenades)          [ newent grenades ]

//Arch and slope menu
newmenu Arches

menuitem (_ [Arch with no sideways curves]) [ heightfield 2; arch 0 ]
menuitem (_ [Arch with sideways curves (delta 1)]) [ heightfield 2; arch 1 ]
menuitem (_ [Arch with sideways curves (delta 2)]) [ heightfield 2; arch 2 ]
menuitem (_ [Arch with sideways curves (delta 3)]) [ heightfield 2; arch 3 ]
menuitem (_ [Arch with sideways curves (delta 4)]) [ heightfield 2; arch 4 ]
menuitem [] -1
menuitem (_ [Slope increase 2 left-right]) [ heightfield 0; slope 2 0 ]
menuitem (_ [Slope decrease 2 left-right]) [ heightfield 0; slope -2 0 ]
menuitem (_ [Slope increase 2 top-bottom]) [ heightfield 0; slope 0 2 ]
menuitem (_ [Slope decrease 2 top-bottom]) [ heightfield 0; slope 0 -2 ]
menuitem (_ [Slope increase 1 left-right]) [ heightfield 0; slope 1 0 ]
menuitem (_ [Slope decrease 1 left-right]) [ heightfield 0; slope -1 0 ]
menuitem (_ [Slope increase 1 top-bottom]) [ heightfield 0; slope 0 1 ]
menuitem (_ [Slope decrease 1 top-bottom]) [ heightfield 0; slope 0 -1 ]
menuitem [] -1
menuitem (_ [Fix heightfielding]) [ solid 0; slope 0 0 ]

newmenu skymaps

menuinit [ echo Please read: (red)/docs/mapediting5.html to find out how to PERMANENTLY add a custom skymap to your map... ]

menuitem (_ [At sea skymap])      [ loadsky "textures/skymaps/kothic/atsea" ]
menuitem (_ [Canyons1 skymap])    [ loadsky "textures/skymaps/ladynighthawk/inhcanyons1" ]
menuitem (_ [Graveyard skymap])	  [ loadsky "textures/skymaps/socksky/grave" ]
menuitem (_ [Ice Station skymap])	[ loadsky "textures/skymaps/iceflow/iceflow" ]
menuitem (_ [Mountain skymap])	  [ loadsky "textures/skymaps/makke/mountain" ]
menuitem (_ [Nightball skymap])	  [ loadsky "textures/skymaps/socksky/nightball" ]
menuitem (_ [Powerlines skymap])  [ loadsky "textures/skymaps/humus/powerlines" ]
menuitem (_ [Rocky skymap])		    [ loadsky "textures/skymaps/makke/rocky" ]
menuitem (_ [Sand skymap])		    [ loadsky "textures/skymaps/makke/sand" ]
menuitem (_ [Steini2 skymap])	    [ loadsky "textures/skymaps/steini/steini2" ]
menuitem (_ [Steini3 skymap])	    [ loadsky "textures/skymaps/steini/steini3" ]
menuitem (_ [Steini4 skymap])	    [ loadsky "textures/skymaps/steini/steini4" ]


_closestenttypestatus = 0
//Map operations
newmenu [Map operations]

menuitem (_ [Newmap (128x128 cubes - recommended)]) [ newmap 7 ]
menuitem (_ [Newmap (256x256 cubes)])               [ newmap 8 ]
menuitem (_ [Increase mapsize (2x)])                [ mapenlarge; echo The map size has been increased by 2. However, the new space is solid. To utilize it, you will need to turn it into non-solid space, by selecting it and pressing G. ]
//menuitem (_ [Edit map message])                     [ showmenu [Edit map message] ]
menuitem (_ [Edit map message])                     editmapmsg
menuitem (_ [Change waterlevel])                    [ saycommand [/waterlevel ] ]
menuitem (_ [Change watercolour])                   [ showmenu [Water colour] ]
menuitem (_ [Generate a random watercolour])        genwc
menuitem (_ [Generate a random fogcolour])          [ fogcolour (genhex) ]
menuitem (_ [Print entity stats])                   entstats
menuitem (_ [Select the next closest entity])       nextclosestent
menuitem (_ [Copy the current closest entity])      copyent
menuitem (_ [Paste a previously copied entity])     pasteent
menuitemcheckbox (_ [Show mapmodel clippings: ]) "$showmodelclipping" [ showmodelclipping $arg1 ]
menuitemslider (_ [Select only these entities: ]) 0 15 "$_closestenttypestatus" 1 [All Light Playerstart Pistol Ammobox Grenades Health Armour Akimbo Mapmodel Ladder CTF-flag Sound Clip Helmet PlayerClip] [ _closestentslider $arg1 ]

// "closestenttype" slider...
_closestentslider = [ closestenttype (at ["" light playerstart pistol ammobox grenades health armour akimbo mapmodel ladder ctf-flag sound clip helmet plclip] $arg1); _closestenttypestatus = $arg1 ]

// FIXME: menu can be removed, if editmapmsg is used
newmenu [Edit map message]
menuinit [ menumapmsgtext = [] ]
menuitemtextinput (_ [Edit your map message: ])	"result $mapmsg" [ menumapmsgtext = $arg1 ] [] 256
menuitem (concatword (c 2) [		      ] "[ OK ]") [ mapmsg $menumapmsgtext ]

redw = 1; greenw = 1; bluew = 1

newmenu [Water colour]

menuitemslider (_ [Red pigment: ]) 1 255 "$redw" 5 []     [ redw = $arg1 ]
menuitemslider (_ [Green pigment: ]) 1 255 "$greenw" 5 [] [ greenw = $arg1 ]
menuitemslider (_ [Blue pigment: ]) 1 255 "$bluew" 5 []   [ bluew = $arg1 ]
menuitem [] -1
menuitem (concatword (c 2) [		     ] "[ OK ]") [ watercolour $redw $greenw $bluew ]

newmenu [Ambient sounds]

menuinit [ ambientsoundmenu = [] ]
menuitem (_ [Cave drip])                    [ ambientsoundmenu = 0; showmenu "Ambient sound settings" ]
menuitem (_ [Cars driving in the distance]) [ ambientsoundmenu = 1; showmenu "Ambient sound settings" ]
menuitem (_ [Humm (01)])                    [ ambientsoundmenu = 2; showmenu "Ambient sound settings" ]
menuitem (_ [Humm (02)])                    [ ambientsoundmenu = 3; showmenu "Ambient sound settings" ]
menuitem (_ [Crickets at night])            [ ambientsoundmenu = 4; showmenu "Ambient sound settings" ]
menuitem (_ [Water (01)])                   [ ambientsoundmenu = 5; showmenu "Ambient sound settings" ]
menuitem (_ Wind)                           [ ambientsoundmenu = 6; showmenu "Ambient sound settings" ]
menuitem (_ [Air conditioner])              [ ambientsoundmenu = 7; showmenu "Ambient sound settings" ]
menuitem (_ Compressor)                     [ ambientsoundmenu = 8; showmenu "Ambient sound settings" ]
menuitem (_ Crow)                           [ ambientsoundmenu = 9; showmenu "Ambient sound settings" ]
menuitem (_ [Dogs (01)])                    [ ambientsoundmenu = 10; showmenu "Ambient sound settings" ]
menuitem (_ Helicopter)                     [ ambientsoundmenu = 11; showmenu "Ambient sound settings" ]
menuitem (_ [Humm (03)])                    [ ambientsoundmenu = 12; showmenu "Ambient sound settings" ]
menuitem (_ [Humm (04)])                    [ ambientsoundmenu = 13; showmenu "Ambient sound settings" ]
menuitem (_ [Humm (05)])                    [ ambientsoundmenu = 14; showmenu "Ambient sound settings" ]
menuitem (_ [Humm (06)])                    [ ambientsoundmenu = 15; showmenu "Ambient sound settings" ]
menuitem (_ [Dogs (02)])                    [ ambientsoundmenu = 16; showmenu "Ambient sound settings" ]
menuitem (_ [Night (01)])                   [ ambientsoundmenu = 17; showmenu "Ambient sound settings" ]
menuitem (_ [Night (02)])                   [ ambientsoundmenu = 18; showmenu "Ambient sound settings" ]
menuitem (_ [Radio comms])                  [ ambientsoundmenu = 19; showmenu "Ambient sound settings" ]
menuitem (_ [Radio static])                 [ ambientsoundmenu = 20; showmenu "Ambient sound settings" ]
menuitem (_ [Sat-coms])                     [ ambientsoundmenu = 21; showmenu "Ambient sound settings" ]
menuitem (_ [Sludge])                       [ ambientsoundmenu = 22; showmenu "Ambient sound settings" ]
menuitem (_ [Static (01)])                  [ ambientsoundmenu = 23; showmenu "Ambient sound settings" ]
menuitem (_ [Static (02)])                  [ ambientsoundmenu = 24; showmenu "Ambient sound settings" ]
menuitem (_ [Vent (01)])                    [ ambientsoundmenu = 25; showmenu "Ambient sound settings" ]
menuitem (_ [Vent (02)])                    [ ambientsoundmenu = 26; showmenu "Ambient sound settings" ]
menuitem (_ [Water owl])                    [ ambientsoundmenu = 27; showmenu "Ambient sound settings" ]
menuitem (_ [Water (02)])                   [ ambientsoundmenu = 28; showmenu "Ambient sound settings" ]
menuitem (_ [Water drip])                   [ ambientsoundmenu = 29; showmenu "Ambient sound settings" ]
menuitem (_ [Wind (02)])                    [ ambientsoundmenu = 30; showmenu "Ambient sound settings" ]
menuitem (_ [Waterpipes (01)])              [ ambientsoundmenu = 31; showmenu "Ambient sound settings" ]
menuitem (_ [Waterpipes (02)])              [ ambientsoundmenu = 32; showmenu "Ambient sound settings" ]
menuitem (_ [Warning alarm])                [ ambientsoundmenu = 33; showmenu "Ambient sound settings" ]
menuitem (_ Gastank)                        [ ambientsoundmenu = 34; showmenu "Ambient sound settings" ]
menuitem (_ Keyboard)                       [ ambientsoundmenu = 35; showmenu "Ambient sound settings" ]
menuitem (_ Factory)                        [ ambientsoundmenu = 36; showmenu "Ambient sound settings" ]
menuitem (_ [Vent (03)])                    [ ambientsoundmenu = 37; showmenu "Ambient sound settings" ]
menuitem (_ Waterfront)                     [ ambientsoundmenu = 38; showmenu "Ambient sound settings" ]
menuitem (_ Generator)                      [ ambientsoundmenu = 39; showmenu "Ambient sound settings" ]
menuitem (_ [Electric buzz])                [ ambientsoundmenu = 40; showmenu "Ambient sound settings" ]
menuitem (_ Alarm)                          [ ambientsoundmenu = 41; showmenu "Ambient sound settings" ]
menuitem (_ Flies)                          [ ambientsoundmenu = 42; showmenu "Ambient sound settings" ]
menuitem (_ [Desert hawk])                  [ ambientsoundmenu = 43; showmenu "Ambient sound settings" ]
menuitem (_ Owl)                            [ ambientsoundmenu = 44; showmenu "Ambient sound settings" ]
menuitem (_ [City birds])                   [ ambientsoundmenu = 45; showmenu "Ambient sound settings" ]

soundrad = 1; soundsize = 0; ambientsoundvol = 255

newmenu [Ambient sound settings]
menuinit [ soundrad = 1; soundsize = 0; ambientsoundvol = 255 ]
menuitemslider (_ [Sound radius: ]) 1 25 "$soundrad" 1 [] [ soundrad = $arg1 ]
menuitemslider (_ [Sound size: ]) 0 25 "$soundsize" 1 []  [ soundsize = $arg1 ]
menuitemslider (_ [Sound volume: ]) 1 255 "$ambientsoundvol" 5 [] [ ambientsoundvol = $arg1 ]
menuitem (concatword (c 2) [		     ] "[ OK ]") [ newent sound $ambientsoundmenu $soundrad $soundsize $ambientsoundvol ]

showedBAKinfo = 0

newmenu [Editing settings]
menuitemslider (_ [Grid/Selection style: ]) 0 1 "$oldselstyle" 1 [triangles "squares (default)"] [ oldselstyle $arg1 ]
menuitemslider (_ [Fly speeds multiplier: ]) 1 5 "$flyspeed" 1 [] [ flyspeed $arg1 ]
menuitemcheckbox (_ [Enable auto save map: ]) "$autosavemap" [ autosavemap = $arg1 ]
menuitemslider (_ [Time between auto saves (in minutes): ]) 2 60 "(div $timeBetAutoSaves 60000)" 1 [] [ timeBetAutoSaves = (* $arg1 60000) ]
menuitemtextinput (_ [Make a map backup (.BAK) every: ]) "$numAutoSaveBackups" [ numAutoSaveBackups = $arg1 ] [ if (! $showedBAKinfo) [ echo This setting effects the number of autosavemaps between making a map backup file. "(.BAK)"; showedBAKinfo = 1 ] ] 4

//Mapmodels
newmenu Mapmodels
menuinit __rebuildmapmodelmenus

tempalias __mapmodelmenulist [
    Platforms "" ""
    "Bridge (8x8)" _1 makke/platform_bridge
    "Platform (8x8)" _1 makke/platform
    "Wire platform (8x8)" _1 toca/platformmet
    "Ledge (4x1)" _1 toca/ledge/1_4cbs
    "Ledge (8x1)" _1 toca/ledge/2_8cbs
    "Ledge (16x1)" _1 toca/ledge/3_16cbs
    "Ledge Corner" _1 toca/ledge/4_corner
    Ladders/Stairs "" ""
    "Single ladder rung (1)" _1 makke/ladder_1x
    "Ladder(7)" _0 makke/ladder_7x
    "Ladder(8)" _0 makke/ladder_8x
    "Ladder(10)" _0 makke/ladder_10x
    "Ladder(11)" _0 makke/ladder_11x
    "Ladder(15)" _0 makke/ladder_15x
    "" _0 --
    "Hangable Ladder (2)" _1 misterfloppy/hanging_ladder/ladder_2
    "Hangable Ladder (6)" _1 misterfloppy/hanging_ladder/ladder_6
    "Hangable Ladder (Top, Over)" _1 misterfloppy/hanging_ladder/ladder_top
    "Hangable Ladder (Top, Side)" _1 misterfloppy/hanging_ladder/ladder_up
    "Hangable Ladder (Bottom)" _1 misterfloppy/hanging_ladder/ladder_low
    "" _0 --
    "Wire stairs (Top)" _1 toca/stairs1
    "Wire stairs (Bottom)" _1 toca/stairs2
    Fencing "" ""
    "Wire fence" _0 makke/fence_chainlink
    "Wire fencepost" _0 makke/fence_chainlink_post
    "Open wire fence-gate" _0 makke/fence_chainlink_no_gate
    "Closed wire fence-gate" _0 makke/fence_chainlink_closed_gate
    "Barbwire fence-top" _0 toca/barbwire
    "" _0 --
    "Corrugated fence" _0 toca/corrugated/fence1
    "Corrugated fence 2" _0 toca/corrugated/fence2
    "Corrugated fence post" _0 toca/corrugated/beam
    "" _0 --
    "Guard rail" _0 toca/guardrail
    "Guard rail 2" _0 toca/guardrail2
    "Guard rail pole" _0 toca/guardrail2/gr2pole
    Plants "" ""
    "Grass 1" _0 makke/grass_short
    "Grass 1 (Dry)" _0 makke/grass_short_dry
    "Grass 1 (Snow)" _0 makke/grass_short_snow
    "Grass 2" _0 makke/grass_long
    "Grass 2 (Dry)" _0 makke/grass_long_dry
    "Grass 2 (Snow)" _0 makke/grass_long_snow
    "Plant 1" _0 makke/plant_leafy
    "Plant 1 (Dry)" _0 makke/plant_leafy_dry
    "Plant 1 (Snow)" _0 makke/plant_leafy_snow
    "Tree trunk" _0 toca/treetrunk1
    "Tree 1" _2 toca/tree1
    "Tree 2" _2 toca/tree2
    "Pine tree" _2 toca/pine
    "Palm tree" _2 toca/palmtree1
    "Bush" _0 toca/plants/bush
    "Small tree" _0 toca/plants/smaltree
    "Grasses" _0 toca/plants/grass
    Lights "" ""
    "Strahler" _1 makke/wall_spotlight
    "Fluorescent lamp" _1 makke/fluorescent_lamp
    "LightBulb" _1 makke/lightbulb
    "Hanging lamp" _1 jcdpc/hanginglamp
    "Alarm lamp" _1 misterfloppy/alarmlamp
    "Plate lamp" _1 misterfloppy/platelamp
    "Street light" _0 makke/street_light
    "Street light (2)" _0 misterfloppy/streetlamp
    Street "" ""
    "Park Bench" _0 makke/bench_seat
    "Dumpster" _0 makke/dumpster
    "Trashbag" _0 toca/trashbag
    "Trashcan" _0 toca/trashcan
    "Roadblock/Barrier" _0 makke/roadblock
    "Roadblock/Barrier 2" _0 makke/roadblock_graffiti
    "Barrier 3" _0 toca/cautionsign
    "Cone" _0 cleaner/traffic_cones/up
    "Fallen cone" _0 cleaner/traffic_cones/down
    "Wheel: Vertical" _0 toca/wheel
    "Tyre: Horizontal" _0 toca/tyre
    "Gray milk crate" _0 toca/milkcrate
    "Red milk crate" _0 ratboy/toca_milkcrate_red
    "Blue milk crate" _0 ratboy/toca_milkcrate_blue
    "Car battery" _0 toca/carbattery
    "Antenna" _0 toca/antenna
    "Hotel sign" _1 cleaner/hotel_sign
    "Fire alarm" _1 cleaner/alarm_bell
    "Electric box (1)" _0 cleaner/elecbox/elecbox1
    "Electric box (2)" _0 cleaner/elecbox/elecbox2
    Pipes "" ""
    "Large concrete pipe" _0 toca/pipes/concretepipe
    "Medium metal pipe" _0 toca/pipes/metalpipe
    "Small metal pipe" _0 toca/pipes/metalpipe2
    "Drainpipe" _0 makke/drainpipe
    "Closed pipe, horz" _1 toca/pipes/industrialpipes/horz
    "Closed pipe, l-down" _1 toca/pipes/industrialpipes/ldwn
    "Closed pipe, l-left" _1 toca/pipes/industrialpipes/lleft
    "Closed pipe, l-right" _1 toca/pipes/industrialpipes/lright
    "Closed pipe, l-up" _1 toca/pipes/industrialpipes/lup
    "Closed pipe, vert" _1 toca/pipes/industrialpipes/vert
    Office "" ""
    "Office chair" _0 makke/office_chair
    "Locker" _0 makke/locker
    "Air Conditioner (Outer)" _0 toca/airconditioner
    "Air Conditioner (Inner)" _0 toca/airconditioner/interior
    "Office desk" _0 toca/officedesk
    "Ceiling fan" _1 toca/ceilingfan
    "Wall switch" _1 toca/electric/switch
    "Wall power outlet" _1 toca/electric/outlet
    "Pinboard" _1 toca/pinboard
    "Fire extinguisher" _0 cleaner/extinguisher
    "Fire extinguisher box" _0 cleaner/extinguisher_box
    "Dropped ceiling, frame" _1 toca/droppedceiling/frame
    "Dropped ceiling, tiles" _1 toca/droppedceiling/tiles
    "Dropped ceiling, single" _1 toca/droppedceiling/single
    "Dropped ceiling, light 1" _1 toca/droppedceiling/light1
    "Dropped ceiling, light 2" _1 toca/droppedceiling/light2
    "World map" _1 cleaner/worldmap
    Computers "" ""
    "Laptop" _0 jcdpc/laptop
    "PC" _0 toca/computer/pc
    "Computer interfaces" _0 toca/computer/monkeymou
    "Communications rack" _0 toca/commrack
    "Communications rack 2" _0 toca/commrack2
    "Server rack" _0 toca/servercluster/rack
    "Server cluster 1" _1 toca/servercluster/U3_1
    "Server cluster 2" _1 toca/servercluster/U3_2
    "Server cluster 3" _1 toca/servercluster/U3_3
    "Server cluster 4" _1 toca/servercluster/U6_1
    "Server cluster 5" _1 toca/servercluster/U6_2
    "Server cluster 6" _1 toca/servercluster/U6_3
    Home "" ""
    "Picture frame" _1 makke/picture
    "Milk" _0 toca/milkcarton
    "CRT TV" _0 toca/tv
    "CRT TV in stand" _1 toca/monitor
    "Plasma TV" _0 toca/plasmatv
    "Power meter" _0 toca/powermeter
    "Rack" _0 toca/rack
    "Utility table" _0 toca/utilitytable
    "Ceiling fan" _1 toca/ceilingfan
    "Window" _0 toca/window1
    "Shelf" _0 toca/shelf
    "Wall switch" _1 toca/electric/switch
    "Wall power outlet" _1 toca/electric/outlet
    Industrial "" ""
    "Barrel" _0 makke/barrel
    "Knocked-over barrel" _0 makke/barrel_fallen
    "Electric meter" _0 makke/electric_meter
    "Pallette" _0 makke/pallet
    "Gastank" _0 makke/fuel_tank
    "Grate (horizontal)" _0 cleaner/grates/grate_hor
    "Grate (vertical)" _0 cleaner/grates/grate_vert
    "Wrench" _0 makke/wrench
    "Bolt" _0 makke/bolt_nut
    "Hook" _0 makke/hook
    "Cinderblock" _0 toca/cinderblock
    "Radioactive drum" _0 toca/radioactivedrum
    "Knocked-over radioactive drum" _0 toca/radioactivedrum2
    "Swiveling security camera" _1 toca/securitycam/secucam
    "Camera mount (Vertical)" _1 toca/securitycam/vertmount
    "Camera mount (Wall)" _1 toca/securitycam/wallmount
    "Vent flap" _0 jcdpc/ventflap
    "Pickaxe, horz" _0 toca/pickaxe/horz
    "Pickaxe, vert" _0 toca/pickaxe/vert
    "Shovel, vert" _0 cleaner/shovels/shovel1
    "Shovel, free-standing" _0 cleaner/shovels/shovel2
    "Shovel, horz" _0 cleaner/shovels/shovel3
    Military "" ""
    "Bullet" _0 toca/bullet
    "Shotgun shell" _0 toca/sgshell
    "Target" _0 toca/signs/target
    "Radar console" _0 toca/radarconsole
    "Razor wire" _0 toca/razorwire
    "Guard tower" _0 toca/guardtower
    "Weapon rack" _0 cleaner/laundry
    Signs "" ""
    "Flammable" _1 makke/signs/flammable
    "Speed Limit 5" _1 makke/signs/speed
    "Maintenance" _1 makke/signs/caution_maintainence
    "Caution" _1 makke/signs/caution_voltage
    "Biohazard" _1 makke/signs/biohazard
    "Toxic" _1 toca/signs/toxic
    "Biohazard (2)" _1 toca/signs/biohazard
    "Chemicals" _1 toca/signs/chemical
    "Confined space" _1 toca/signs/confined
    "Do not enter!" _1 toca/signs/donotenter
    "Explosives" _1 toca/signs/explosives
    "First aid" _1 toca/signs/firstaid
    "No entry" _1 toca/signs/noentry
    "No smoking" _1 toca/signs/nosmoking
    "Radioactive" _1 toca/signs/radioactive
    "Restricted area" _1 toca/signs/restricted
    "Arab" _1 makke/signs/arab
    "Wanted Poster" _1 makke/signs/wanted
    Other "" ""
    "Cigarette" _0 makke/cigarette
    "Can" _0 makke/coke_can
    "Fallen Can" _0 makke/coke_can_fallen
    "Broken Wood" _0 makke/broken_wood
    "Coffee" _0 makke/coffee_mug
    "Flyer" _0 makke/flyer_propaganda
    "Tree Flyer" _0 makke/flyer_environmental
    "Potato box" _0 makke/aardapple_enginebox
    "Cardboard box" _0 toca/cardboardbox
    "Chinese take-out" _0 toca/takeoutbox
    "Plastic bottle" _0 toca/plasticbottles/1
    "Squashed plastic bottle" _0 toca/plasticbottles/2
    "Plastic bag, white" _0 toca/plasticbags/1
    "Plastic bag, yellow" _0 toca/plasticbags/2
    "Newspaper (1)" _0 toca/newspaper/1
    "Newspaper (2)" _0 toca/newspaper/2
    "Paintcan" _0 toca/paintcan
]

tempalias __treewarning [echo "\f3Trees are expensive mapmodels. Please don't use more than one or two in a map."]
tempalias __mm_unassigned [echo (yellow) sry: mapmodel (addpunct $arg1) has no slot assigned. Please edit your map config file.]
tempalias __mm_showmodel [concat chmenumdl $arg1 $arg2 all 40 3]

tempalias __rebuildmapmodelmenus [
    if $mapmodelchanged [
        push __mm_menus []
        looplist $__mapmodelmenulist [title cmd path] [if (&& (! (strlen $path)) (< (findlist $__mm_menus $title) 0)) [__mm_menus = (concat $__mm_menus $title)]]
        delmenu Mapmodels
        newmenu Mapmodels
        looplist $__mm_menus m [menuitem $m (concat showmenu $m) ; delmenu $m]
        push _0 [concat newent mapmodel $arg1]
        push _1 [concat saycommand (addpunct (concat /newent mapmodel $arg1))]
        push _2 [concat __treewarning [;] newent mapmodel $arg1]
        push __mm_done ""
        push menu ""
        push idxs ""
        looplist $__mapmodelmenulist [title cmd path] [
            if (! (strlen $path)) [
                menu = $title
                newmenu $menu
            ][
                if (strlen $title) [
                    path = (concatword "mapmodels/" $path)
                    idxs = (mapmodelbyname $path)
                    if (listlen $idxs) [
                        __mm_done = (concat $__mm_done $idxs)
                        if (> (listlen $idxs) 1) [
                            looplist $idxs i [menuitem (concat $title (concatword "#" $i)) (cmd $i) (__mm_showmodel $menu $path)]  // several slots for the same mapmodel
                        ][
                            menuitem $title (cmd $idxs) (__mm_showmodel $menu $path) // usual case: one slot per model
                        ]
                    ][
                        menuitem (concatword "\f4" $title) (concat __mm_unassigned $path) (__mm_showmodel $menu $path)   // mapmodel has no slot assigned
                    ]
                ][
                    menuitem [] -1 (concat chmenumdl $menu)  // blank line
                ]
            ]
        ]
        push __mm_unsorted 0
        delmenu Unsorted
        newmenu Unsorted
        loop i 256 [
            if (&& (< (findlist $__mm_done $i) 0) (strlen (mapmodelname $i))) [
                menuitem (format "%1 #%2" (mapmodelname $i) $i) (_1 $i) (__mm_showmodel Unsorted (mapmodelname $i))
                __mm_unsorted = 1
            ]
        ]
        if $__mm_unsorted [newmenu Mapmodels ; menuitem Unsorted "showmenu Unsorted"]
        pop menu __mm_menus _0 _1 _2 __mm_done __mm_unsorted idxs
        mapmodelchanged 0
    ]
]

persistidents 1
